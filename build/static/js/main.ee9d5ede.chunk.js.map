{"version":3,"sources":["component/Paper.js","component/Report.js","component/Loading.js","component/DetailParam.js","component/ChangeParam.js","component/Upload.js","component/Login.js","component/NavBar.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","padding","spacing","button","margin","PaperSheet","classes","react_default","a","createElement","Paper","className","Typography","variant","component","card","maxWidth","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","report","Report","_ref","_React$useState","React","useState","_React$useState2","Object","slicedToArray","data1","data2","datastats","url","Card","CardHeader","Avatar","aria-label","action","IconButton","MoreVert_default","title","subheader","CardContent","List","Grid","container","style","width","map","_ref2","_ref3","item","value","xs","ListItem","key","ListItemText","_ref4","_ref5","src","_ref6","_ref7","Button","size","color","textDecoration","href","target","styles","loading","zIndex","position","top","left","right","background","textAlign","Loading","Fragment","CircularProgress","disableShrink","align","display","flexWrap","textField","marginRight","dense","marginTop","menu","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","Upload","state","selectedFile","fileName","onChangeHandler","e","_this","setState","files","name","console","log","uploadFile","data","FormData","append","axios","post","then","res","entries","this","props","AppBar","appbar","Toolbar","pos","accept","input","label","id","multiple","type","onChange","txt","gutterBottom","onClick","Component","withStyles","paddingLeft","borderRadius","border","opacity","marginBottom","Login","handleLogin","loginStatus","user","open","setOpen","_React$useState3","_React$useState4","userEmail","setUserEmail","_React$useState5","_React$useState6","userPassword","setUserPassword","_React$useState7","_React$useState8","anchorEl","setAnchorEl","handleClose","aria-controls","aria-haspopup","event","currentTarget","Menu_Menu","keepMounted","Boolean","onClose","MenuItem","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","fullWidth","DialogActions","TabPanel","children","index","other","objectWithoutProperties","assign","role","hidden","concat","Box","p","a11yProps","LinkTab","Tab","preventDefault","flexGrow","palette","paper","navButton","NavTabs","setValue","edge","menuButton","Menu_default","Tabs","newValue","component_Upload","App","users","email","password","currentUser","find","alert","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ee9d5ede.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\n\n//JS CSS for this component\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3, 2)\n  },\n  button: {\n    margin: theme.spacing(1)\n  }\n}));\n\n//this component is simply for text explainations \nexport default function PaperSheet() {\n  const classes = useStyles();\n  \n  return (\n    <div>\n      <Paper className={classes.root}>\n        <Typography variant=\"h5\" component=\"h3\">\n          This is a sheet of paper.\n        </Typography>\n        <Typography component=\"p\">\n          Paper can be used to build surface or other elements for your\n          application.\n        </Typography>\n      </Paper>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { red } from \"@material-ui/core/colors\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\n\n//JS CSS for this component\nconst useStyles = makeStyles(theme => ({\n  card: {\n    maxWidth: 1000\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\" // 16:9\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\"\n  },\n  avatar: {\n    backgroundColor: red[500]\n  },\n  report: {\n    height: \"1400px\"\n  }\n}));\n\n//Generate the report using data from server\nexport default function Report({ report }) {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n  //data is passed down from Upload component\n  const { data1, data2, datastats, url } = report;\n\n  return (\n    <Card className={classes.card}>\n      <CardHeader\n        avatar={\n          <Avatar aria-label=\"report\" className={classes.avatar}>\n            R\n          </Avatar>\n        }\n        action={\n          <IconButton aria-label=\"settings\">\n            <MoreVertIcon />\n          </IconButton>\n        }\n        title=\"Report\"\n        subheader=\"Sep, 2019\"\n      />\n\n      {/*the first chunk of the data */}\n      <CardContent>\n        <List className={classes.report}>\n          <Grid container spacing={1} style={{ width: \"55%\" }}>\n            {data1.map(([item, value]) => {\n              return (\n                <Grid item xs={6}>\n                  <ListItem key={item}>\n                    <ListItemText>\n                      {item} is {value}\n                    </ListItemText>\n                  </ListItem>\n                </Grid>\n              );\n            })}\n          </Grid>\n\n          {/*the second chunk of the data */}\n          <Grid container spacing={1}>\n            {data2.map(([item, value]) => {\n              return (\n                <Grid item xs={6}>\n                  <ListItem key={item}>\n                    <ListItemText>\n                      {item} is {value}\n                    </ListItemText>\n                  </ListItem>\n                </Grid>\n              );\n            })}\n          </Grid>\n\n          {/*the third chunk of the data and image from server */}\n          <Grid container spacing={1}>\n            <img src={url} />\n            {datastats.map(([item, value]) => {\n              return (\n                <Grid item xs={6}>\n                  <ListItem key={item}>\n                    <ListItemText>\n                      {item} is {value}\n                    </ListItemText>\n                  </ListItem>\n                </Grid>\n              );\n            })}\n          </Grid>\n        </List>\n\n        <Button size=\"medium\" variant=\"contained\" color=\"primary\">\n          <a\n            style={{ color: \"white\", textDecoration: \"none\" }}\n            href=\"http://ec2-52-193-188-87.ap-northeast-1.compute.amazonaws.com/download-pdf\"\n            target=\"_blank\"\n          >\n            DOWNLOAD PDF\n          </a>\n        </Button>\n      </CardContent>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Typography from \"@material-ui/core/Typography\";\n\n//JS CSS for this component\nconst styles = {\n  loading: {\n    width: \"100%\",\n    zIndex: 99,\n    position: \"absolute\",\n    height: 1800,\n    top: 0,\n    left: 0,\n    right: 0,\n    background: \"rgba(0, 0, 0, 0.5)\",\n    textAlign: \"center\",\n    paddingTop: \"20%\"\n  }\n};\n\n//the transparent waiting page telling user report is not ready yet\nexport default function Loading() {\n  return (\n    <>\n      <div style={styles.loading}>\n        <CircularProgress disableShrink />\n        <Typography align=\"center\" variant=\"h3\" color=\"inherit\">\n          Loading...\n        </Typography>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n\n//JS CSS for this component\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200\n  },\n  dense: {\n    marginTop: 19\n  },\n  menu: {\n    width: 200\n  }\n}));\n\n//Detail parameters are changed and kept in this component\nexport default function DetailParam(props) {\n  const classes = useStyles();\n  const [values, setValues] = React.useState({\n    poly: \"4\",\n    param1: \"1\",\n    param2: \"1\",\n    param3: \"1\"\n  });\n\n  const handleChange = name => event => {\n    setValues({ ...values, [name]: event.target.value });\n  };\n\n  return (\n    <form className={classes.container} noValidate autoComplete=\"off\">\n      <TextField\n        id=\"standard-name\"\n        label=\"Poly-Order\"\n        className={classes.textField}\n        value={values.poly}\n        onChange={handleChange(\"poly\")}\n        margin=\"normal\"\n      />\n      <TextField\n        id=\"standard-uncontrolled\"\n        label=\"Param1\"\n        value={values.param1}\n        className={classes.textField}\n        onChange={handleChange(\"param1\")}\n        margin=\"normal\"\n      />\n      <TextField\n        required\n        id=\"standard-required\"\n        label=\"Param2\"\n        value={values.param2}\n        className={classes.textField}\n        onChange={handleChange(\"param2\")}\n        margin=\"normal\"\n      />\n      <TextField\n        required\n        id=\"standard-required\"\n        label=\"Param3\"\n        value={values.param3}\n        className={classes.textField}\n        onChange={handleChange(\"param3\")}\n        margin=\"normal\"\n      />\n      <Button\n        size=\"medium\"\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={props.changeAndUpload(values)}\n      >\n        Change and Upload\n      </Button>\n    </form>\n  );\n}\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport DetailParam from \"./DetailParam\";\n\n//JS CSS for this component\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    marginTop: \"5px\"\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular\n  }\n}));\n\n//A expensionable section, user can click and edit parameters here\nexport default function ChangeParam(props) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <ExpansionPanel>\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <Typography className={classes.heading}>\n            Change Algorithm Parameters\n          </Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <Typography>\n            <DetailParam changeAndUpload={props.changeAndUpload} />\n          </Typography>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n    </div>\n  );\n}\n","import React from \"react\";\nimport axios from \"axios\";\nimport { withStyles } from \"@material-ui/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Report from \"./Report\";\nimport Loading from \"./Loading\";\nimport ChangeParam from \"./ChangeParam\";\n\n//JS CSS for this component\nconst styles = theme => ({\n  root: {},\n  appbar: {\n    paddingLeft: \"35%\"\n  },\n\n  input: {\n    borderRadius: 4,\n    border: \"1px solid #ced4da\",\n    fontSize: 16,\n    padding: \"10px 12px\",\n    width: \"calc(100% - 24px)\",\n    height: 150,\n    opacity: 0\n  },\n  txt: {\n    border: \"1px solid #ced4da\",\n    marginTop: -150,\n    height: 150,\n    marginBottom: 10\n  },\n  report: {\n    width: \"650\"\n  }\n});\n\n//user can upload CSV file\nclass Upload extends React.Component {\n  state = {\n    selectedFile: null, //the csv file\n    fileName: \"Drag and drop a csv file or Click to select\", //csv file name\n    data1: [], //dataset 1 from server\n    data2: [], //dataset 2 from server\n    datastats: [], //dataset 3 from server\n    url: \"\", //the url of the image in the result\n    loading: false //set to true while waiting for the data from server\n  };\n\n  //the file and file name will be updated to the state of this component\n  onChangeHandler = e => {\n    this.setState({\n      selectedFile: e.target.files[0],\n      fileName: e.target.files[0].name\n    });\n    console.log(e.target.files[0]);\n  };\n\n  //send file to server\n  uploadFile = () => {\n    this.setState({ loading: true });\n    const data = new FormData();\n    data.append(\"file\", this.state.selectedFile);\n\n    //use Axios to post csv file, then receive the data return by server\n    axios\n      .post(\n        \"http://ec2-52-193-188-87.ap-northeast-1.compute.amazonaws.com/upload\",\n        data\n      )\n      .then(res => {\n        // then update the state using returned data\n        console.log(res)\n        this.setState({\n          data1: Object.entries(res.data.data1),\n          data2: Object.entries(res.data.data2),\n          datastats: Object.entries(res.data.datastats),\n          url: res.data.url,\n          loading: false\n        });\n        // return \"done\"\n      });\n  };\n\n//  //send csv together with changed parameters, this function is not completed yet\n//   changeAndUpload = values => {\n//     // this.setState({ loading: true });\n//     const data = new FormData();\n//     data.append(\"file\", this.state.selectedFile);\n//     data.append(\"values\", values);\n\n//     //use Axios to post csv file with changed params, then receive the data return by server\n//     axios\n//       .post(\n//         \"http://ec2-52-193-188-87.ap-northeast-1.compute.amazonaws.com/upload\",\n//         data\n//       )\n//       .then(res => {\n//         // then update the state using returned data\n//         this.setState({\n//           data1: Object.entries(res.data.data1),\n//           data2: Object.entries(res.data.data2),\n//           datastats: Object.entries(res.data.datastats),\n//           url: res.data.url,\n//           loading: false\n//         });\n//       });\n//   };\n\n  render() {\n    const { classes } = this.props;\n    const { loading } = this.state;\n\n    return (\n      <>\n        {/*check the loading status, if true render the loading component */}\n        {loading ? <Loading /> : null}\n        <Grid container spacing={3}>\n          {/*the upload section on the left */}\n          <Grid item xs={5}>\n            <Card className={classes.card}>\n              <CardContent>\n                <AppBar\n                  position=\"static\"\n                  color=\"default\"\n                  className={classes.appbar}\n                >\n                  <Toolbar>\n                    <Typography align=\"center\" variant=\"h6\" color=\"inherit\">\n                      UPLOAD\n                    </Typography>\n                  </Toolbar>\n                </AppBar>\n                <Typography className={classes.pos} color=\"textSecondary\">\n                  <input\n                    accept=\"csv/*\"\n                    className={classes.input}\n                    label=\"Name\"\n                    id=\"raised-button-file\"\n                    multiple\n                    type=\"file\"\n                    onChange={this.onChangeHandler}\n                  />\n                </Typography>\n                <Typography className={classes.txt} color=\"textSecondary\">\n                  {this.state.fileName}\n                </Typography>\n\n                <Typography\n                  className={classes.title}\n                  color=\"textSecondary\"\n                  gutterBottom\n                >\n                  <Button\n                    size=\"medium\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={this.uploadFile}\n                  >\n                    UPLOAD CSV FILE\n                  </Button>\n                  {/* <ChangeParam changeAndUpload={this.changeAndUpload} /> */}\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n\n          {/*the report on the right */}\n          <Grid item xs={7}>\n            <Report className={classes.report} report={this.state} />\n          </Grid>\n        </Grid>\n      </>\n    );\n  }\n}\n\nexport default withStyles(styles)(Upload);\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\n//Login function, a dialog will pop out if click\nexport default function Login({ handleLogin, loginStatus, user }) {\n  const [open, setOpen] = React.useState(false);\n\n  //receive user Email and Password\n  const [userEmail, setUserEmail] = React.useState(\"\");\n  const [userPassword, setUserPassword] = React.useState(\"\");\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  function handleClick(event) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function handleCloseLogin() {\n    setAnchorEl(null);\n  }\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  function login() {\n    setOpen(false);\n    handleLogin(userEmail, userPassword);\n    setUserEmail(\"\");\n    setUserPassword(\"\");\n  }\n\n  return (\n    <div>\n      {/*check login status, if not render \"Login\" button\n         if yes render the name of the user */}\n      {loginStatus ? (\n        <>\n          <Button\n            aria-controls=\"simple-menu\"\n            aria-haspopup=\"true\"\n            variant=\"outlined\"\n            style={{ color: \"white\", marginTop: 5 }}\n            onClick={handleClick}\n          >\n            {user.name}\n          </Button>\n\n          {/*after login, user can check profile, account and log out*/}\n          <Menu\n            id=\"simple-menu\"\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={handleCloseLogin}\n          >\n            <MenuItem onClick={handleClose}>Profile</MenuItem>\n            <MenuItem onClick={handleClose}>My account</MenuItem>\n            <MenuItem onClick={handleClose}>Logout</MenuItem>\n          </Menu>\n        </>\n      ) : (\n        <>\n          <Button\n            variant=\"outlined\"\n            style={{ color: \"white\", marginTop: 5 }}\n            onClick={handleClickOpen}\n          >\n            login\n          </Button>\n\n         {/*pop out dialog asking for login information(Email and password) */}\n          <Dialog\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"form-dialog-title\">Login</DialogTitle>\n            <DialogContent>\n              <DialogContentText>\n                To subscribe to this website, please enter your email address\n                here. We will send updates occasionally.\n              </DialogContentText>\n\n              <TextField\n                autoFocus\n                margin=\"dense\"\n                id=\"name\"\n                label=\"Email Address\"\n                type=\"email\"\n                fullWidth\n                value={userEmail}\n                onChange={({ target }) => setUserEmail(target.value)}\n              />\n\n              <TextField\n                autoFocus\n                margin=\"dense\"\n                id=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                fullWidth\n                value={userPassword}\n                onChange={({ target }) => setUserPassword(target.value)}\n              />\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleClose} color=\"primary\">\n                Cancel\n              </Button>\n              <Button onClick={login} color=\"primary\">\n                Login\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport Paper from \"../component/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Upload from \"./Upload\";\nimport Login from \"./Login\";\n\n//The function to switch different panels by clicking tabs\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`nav-tabpanel-${index}`}\n      aria-labelledby={`nav-tab-${index}`}\n      {...other}\n    >\n      <Box p={3}>{children}</Box>\n    </Typography>\n  );\n}\n\n//JS CSS for TabPanel\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `nav-tab-${index}`,\n    \"aria-controls\": `nav-tabpanel-${index}`\n  };\n}\n\n//Tab component\nfunction LinkTab(props) {\n  return (\n    <Tab\n      component=\"a\"\n      onClick={event => {\n        event.preventDefault();\n      }}\n      {...props}\n    />\n  );\n}\n\n//JS CSS for this whole navigation bar\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper\n  },\n  navButton: {\n    marginTop: theme.spacing(0.6)\n  }\n}));\n\n//the navigation bar component\nexport default function NavTabs({ handleLogin, loginStatus, user }) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  function handleChange(event, newValue) {\n    setValue(newValue);\n  }\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Grid container spacing={3}>\n          {/*Left top icon, we will change it to the website symbol in the future */}\n          <Grid item xs={1}>\n            <IconButton\n              edge=\"start\"\n              className={classes.menuButton}\n              color=\"inherit\"\n              aria-label=\"menu\"\n            >\n              <MenuIcon />\n            </IconButton>\n          </Grid>\n\n          {/*the navigation tabs */}\n          <Grid item xs={10}>\n            <Tabs\n              variant=\"fullWidth\"\n              value={value}\n              onChange={handleChange}\n              aria-label=\"nav tabs example\"\n            >\n              <LinkTab label=\"Home\" href=\"/drafts\" {...a11yProps(0)} />\n              <LinkTab label=\"Analysis\" href=\"/trash\" {...a11yProps(1)} />\n              <LinkTab label=\"Help\" href=\"/spam\" {...a11yProps(2)} />\n              <LinkTab label=\"About\" href=\"/spam\" {...a11yProps(3)} />\n            </Tabs>\n          </Grid>\n\n          {/*login selection menu */}\n          <Grid item xs={1}>\n            <Login\n              handleLogin={handleLogin}\n              loginStatus={loginStatus}\n              user={user}\n            />\n          </Grid>\n        </Grid>\n      </AppBar>\n\n      {/*Corresponding tab panels below */}\n      <TabPanel value={value} index={0}>\n        <Paper />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <Upload />\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        Help\n      </TabPanel>\n      <TabPanel value={value} index={3}>\n        About\n      </TabPanel>\n    </div>\n  );\n}\n","import React from \"react\";\nimport NavBar from \"./component/NavBar\";\n\n//top level component of this web app\nclass App extends React.Component {\n  state = {\n    users: [\n      {\n        email: \"renee@123.com\",\n        name: \"renee\",\n        password: \"aaa\"\n      },\n      {\n        email: \"tom@123.com\",\n        name: \"tom\",\n        password: \"zzz\"\n      }\n    ], //randomly makeup user information\n    loginStatus: false, //current user login status\n    user: {} //current user information\n  };\n\n  handleLogin = (email, password) => {\n    const currentUser = this.state.users.find(\n      user => user.email === email && user.password === password\n    );\n    if (currentUser) {\n      this.setState({ loginStatus: true, user: currentUser });\n    } else {\n      alert(\"Check your email address or password\");\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        {/*the navigation panel, user status is passed down */}\n        <NavBar\n          handleLogin={this.handleLogin}\n          loginStatus={this.state.loginStatus}\n          user={this.state.user}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}